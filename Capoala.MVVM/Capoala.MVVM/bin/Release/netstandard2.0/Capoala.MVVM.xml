<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Capoala.MVVM</name>
    </assembly>
    <members>
        <member name="T:Capoala.MVVM.INavigationService`1">
            <summary>
            A navigation service.
            </summary>
            <typeparam name="TNavigationItem">The type of object which represents how navigation is managed.</typeparam>
        </member>
        <member name="P:Capoala.MVVM.INavigationService`1.Current">
            <summary>
            The current navigation item.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.INavigationService`1.Navigate(`0)">
            <summary>
            Navigate to the specified navigation item.
            </summary>
            <param name="navItem">The navigation item to navigate to.</param>
        </member>
        <member name="M:Capoala.MVVM.INavigationService`1.GoBack">
            <summary>
            Navigates to the previous navigation item in a forward moving direction.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.INavigationService`1.GoForward">
            <summary>
            Navigates to the previous navigation item in a backward moving direction.
            </summary>
        </member>
        <member name="P:Capoala.MVVM.INavigationService`1.CanGoBack">
            <summary>
            Determines if the ability to go back is available.
            </summary>
        </member>
        <member name="P:Capoala.MVVM.INavigationService`1.CanGoForward">
            <summary>
            Determines if the ability to go forward is available.
            </summary>
        </member>
        <member name="T:Capoala.MVVM.NavigationServiceBase`1">
            <summary>
            A base implementation of a navigation service.
            </summary>
            <typeparam name="TNavigationItem">The type of object which represents how navigation is managed.</typeparam>
        </member>
        <member name="M:Capoala.MVVM.NavigationServiceBase`1.#ctor">
            <summary>
            Creates a new <see cref="T:Capoala.MVVM.NavigationServiceBase`1"/> instance.
            </summary>
        </member>
        <member name="F:Capoala.MVVM.NavigationServiceBase`1.BackHistory">
            <summary>
            Contains previous navigation items in a forward moving direction.
            </summary>
        </member>
        <member name="F:Capoala.MVVM.NavigationServiceBase`1.ForwardHistory">
            <summary>
            Contains previous navigation items in a backward moving direction.
            </summary>
        </member>
        <member name="P:Capoala.MVVM.NavigationServiceBase`1.Current">
            <summary>
            The current navigation item.
            </summary>
        </member>
        <member name="P:Capoala.MVVM.NavigationServiceBase`1.CanGoBack">
            <summary>
            Determines if the ability to go back is available.
            </summary>
        </member>
        <member name="P:Capoala.MVVM.NavigationServiceBase`1.CanGoForward">
            <summary>
            Determines if the ability to go forward is available.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.NavigationServiceBase`1.GoBack">
            <summary>
            Navigates to the previous navigation item in a forward moving direction.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.NavigationServiceBase`1.GoForward">
            <summary>
            Determines if the ability to go forward is available.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.NavigationServiceBase`1.Navigate(`0)">
            <summary>
            Navigate to the specified navigation item.
            </summary>
            <param name="navItem">The navigation item to navigate to.</param>
        </member>
        <member name="T:Capoala.MVVM.NotifyingObjectBase">
            <summary>
            Allows the ability to notify clients that a property has changed.
            </summary>
        </member>
        <member name="F:Capoala.MVVM.NotifyingObjectBase.NotifiedOnChangeAssociations">
            <summary>
            A collection associating property names with a collection of property names to notify.
            </summary>
        </member>
        <member name="F:Capoala.MVVM.NotifyingObjectBase.NotifyOnChangeAssociations">
            <summary>
            A collection associating property names with a collection of property names to notify.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.NotifyingObjectBase.NotifiedOnChangePropertyNamesQuery(System.String)">
            <summary>
            A query for property names to notify when this property is raised.
            </summary>
            <param name="caller">The property name being raised.</param>
            <returns></returns>
        </member>
        <member name="M:Capoala.MVVM.NotifyingObjectBase.NotifyOnChangePropertyNamesQuery(System.String)">
            <summary>
            A query for property names to notify when this property is raised.
            </summary>
            <param name="caller">The property name being raised.</param>
            <returns></returns>
        </member>
        <member name="F:Capoala.MVVM.NotifyingObjectBase.BackingStore">
            <summary>
            A collection storing property names and their associated values.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.NotifyingObjectBase.#ctor">
            <summary>
            Creates a new <see cref="T:Capoala.MVVM.NotifyingObjectBase"/> instance.
            </summary>
        </member>
        <member name="E:Capoala.MVVM.NotifyingObjectBase.PropertyChanged">
            <summary>
            Occurs when a property value has changed.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.NotifyingObjectBase.Raise(System.String)">
            <summary>
            Raises the <see cref="E:Capoala.MVVM.NotifyingObjectBase.PropertyChanged"/> event with the specified property name.
            </summary>
            <param name="caller">The property name.</param>
        </member>
        <member name="M:Capoala.MVVM.NotifyingObjectBase.Set``1(``0,System.Action,System.String)">
            <summary>
            Sets the value of the specified property and raises a property changed event.
            </summary>
            <typeparam name="TValue">The type of object to store.</typeparam>
            <param name="value">The value.</param>
            <param name="propertyName">The property name.</param>
            <param name="action">The action to perform after setting the value and raising the property changed event.</param>
        </member>
        <member name="M:Capoala.MVVM.NotifyingObjectBase.Get``1(System.String)">
            <summary>
            Retrieves the value associated to the specified property name.
            </summary>
            <typeparam name="TValue">The type of object being retrieved.</typeparam>
            <param name="propertyName">The property name to retrieve the value of.</param>
            <returns></returns>
        </member>
        <member name="T:Capoala.MVVM.NotifyingObjectBase.NotifiedOnChange">
            <summary>
            Subscribes to the <see cref="E:Capoala.MVVM.NotifyingObjectBase.PropertyChanged"/> event of one or more other properties.
            </summary>
        </member>
        <member name="P:Capoala.MVVM.NotifyingObjectBase.NotifiedOnChange.PropertyNames">
            <summary>
            The collection of property names that should trigger a raise of this property.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.NotifyingObjectBase.NotifiedOnChange.#ctor(System.String[])">
            <summary>
            Creates a new <see cref="T:Capoala.MVVM.NotifyingObjectBase.NotifiedOnChange"/> instance.
            </summary>
            <param name="propertyNames">The collection of property names that should trigger a raise of this property.</param>
        </member>
        <member name="T:Capoala.MVVM.NotifyingObjectBase.NotifyOnChange">
            <summary>
            Notifies the specified properties when this property's value changes.
            </summary>
        </member>
        <member name="P:Capoala.MVVM.NotifyingObjectBase.NotifyOnChange.PropertyNames">
            <summary>
            The collection of property names that should be raised when this property's value is changed.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.NotifyingObjectBase.NotifyOnChange.#ctor(System.String[])">
            <summary>
            Creates a new <see cref="T:Capoala.MVVM.NotifyingObjectBase.NotifyOnChange"/> instance.
            </summary>
            <param name="propertyNames">The collection of property names that should be raised when this property's value is changed.</param>
        </member>
        <member name="T:Capoala.MVVM.RelayCommand">
            <summary>
            An implementation of <see cref="T:System.Windows.Input.ICommand"/>.
            </summary>
        </member>
        <member name="E:Capoala.MVVM.RelayCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.RelayCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command.</param>
            <returns></returns>
        </member>
        <member name="M:Capoala.MVVM.RelayCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.</param>
        </member>
        <member name="M:Capoala.MVVM.RelayCommand.RaiseCanExecuteChanged">
            <summary>
            Notifies the client that the ability to execute the command has changed.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.RelayCommand.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>
            Creates a new instance of <see cref="T:Capoala.MVVM.RelayCommand"/>.
            </summary>
            <param name="action">The action to invoke.</param>
            <param name="predicate">The method that defines whether the command can execute.</param>
        </member>
        <member name="T:Capoala.MVVM.RelayCommand`1">
            <summary>
            An implementation of <see cref="T:System.Windows.Input.ICommand"/>.
            </summary>
        </member>
        <member name="E:Capoala.MVVM.RelayCommand`1.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.RelayCommand`1.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">The type of object the parameter is.</param>
            <returns></returns>
        </member>
        <member name="M:Capoala.MVVM.RelayCommand`1.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.</param>
        </member>
        <member name="M:Capoala.MVVM.RelayCommand`1.RaiseCanExecuteChanged">
            <summary>
            Notifies the client that the ability to execute the command has changed.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.RelayCommand`1.#ctor(System.Action{`0},System.Predicate{`0})">
            <summary>
            Creates a new instance of <see cref="T:Capoala.MVVM.RelayCommand`1"/>.
            </summary>
            <param name="action">The action to invoke.</param>
            <param name="predicate">The method that defines whether the command can execute.</param>
        </member>
    </members>
</doc>
