<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Capoala.MVVM</name>
    </assembly>
    <members>
        <member name="T:Capoala.MVVM.CommandRelay">
            <summary>
            An implementation of <see cref="T:System.Windows.Input.ICommand"/>.
            </summary>
        </member>
        <member name="F:Capoala.MVVM.CommandRelay.Predicate">
            <summary>
            The function which determines whether this object is allowed to execute.
            </summary>
        </member>
        <member name="F:Capoala.MVVM.CommandRelay.RelayAction">
            <summary>
            The <see cref="T:System.Action"/> to execute.
            </summary>
        </member>
        <member name="E:Capoala.MVVM.CommandRelay.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.CommandRelay.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command.</param>
            <returns>
            Returns <see langword="true"/> if this command can be executed; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Capoala.MVVM.CommandRelay.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.</param>
        </member>
        <member name="M:Capoala.MVVM.CommandRelay.NotifyCanExecuteDidChange">
            <summary>
            Notifies the client that the ability to execute the command has changed.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.CommandRelay.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>
            Creates a new instance of <see cref="T:Capoala.MVVM.CommandRelay"/>.
            </summary>
            <param name="action">The action to invoke.</param>
            <param name="predicate">The method that defines whether the command can execute.</param>
        </member>
        <member name="T:Capoala.MVVM.CommandRelay`1">
            <summary>
            An implementation of <see cref="T:System.Windows.Input.ICommand"/>.
            </summary>
        </member>
        <member name="F:Capoala.MVVM.CommandRelay`1.Predicate">
            <summary>
            The function which determines whether this object is allowed to execute.
            </summary>
        </member>
        <member name="F:Capoala.MVVM.CommandRelay`1.RelayAction">
            <summary>
            The <see cref="T:System.Action`1"/> to execute.
            </summary>
        </member>
        <member name="E:Capoala.MVVM.CommandRelay`1.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.CommandRelay`1.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">The type of object the parameter is.</param>
            <returns></returns>
        </member>
        <member name="M:Capoala.MVVM.CommandRelay`1.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.</param>
        </member>
        <member name="M:Capoala.MVVM.CommandRelay`1.NotifyCanExecuteDidChange">
            <summary>
            Notifies the client that the ability to execute the command has changed.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.CommandRelay`1.#ctor(System.Action{`0},System.Func{System.Boolean})">
            <summary>
            Creates a new instance of <see cref="T:Capoala.MVVM.CommandRelay`1"/>.
            </summary>
            <param name="action">The action to invoke.</param>
            <param name="predicate">The method that defines whether the command can execute.</param>
        </member>
        <member name="T:Capoala.MVVM.NotifyOnChange">
            <summary>
            An attribute to specify other properties that should be notified when this property's value changes.
            </summary>
        </member>
        <member name="P:Capoala.MVVM.NotifyOnChange.PropertyNames">
            <summary>
            The property names to notify.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.NotifyOnChange.#ctor(System.String[])">
            <summary>
            Creates a new instance of <see cref="T:Capoala.MVVM.NotifyOnChange"/>.
            </summary>
            <param name="propertyNames">The property names to notify.</param>
        </member>
        <member name="T:Capoala.MVVM.NotifyPropertyChangedBase">
            <summary>
            A base class for implementing the <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> interface.
            </summary>
        </member>
        <member name="F:Capoala.MVVM.NotifyPropertyChangedBase.Subscribers">
            <summary>
            Contains the lookup of properties with the <see cref="T:Capoala.MVVM.SubscribeToChanges"/> attribute.
            </summary>
        </member>
        <member name="F:Capoala.MVVM.NotifyPropertyChangedBase.ForcedSubscribers">
            <summary>
            Contains the lookup of properties with the <see cref="T:Capoala.MVVM.NotifyOnChange"/> attribute.
            </summary>
        </member>
        <member name="F:Capoala.MVVM.NotifyPropertyChangedBase.CommandRelaySubscribers">
            <summary>
            Contains the lookup for properties of type <see cref="T:Capoala.MVVM.CommandRelay"/> with the <see cref="T:Capoala.MVVM.SubscribeToChanges"/> attribute.
            </summary>
        </member>
        <member name="E:Capoala.MVVM.NotifyPropertyChangedBase.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.NotifyPropertyChangedBase.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Capoala.MVVM.NotifyPropertyChangedBase"/>.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.NotifyPropertyChangedBase.Notify(System.String)">
            <summary>
            Raises the <see cref="E:Capoala.MVVM.NotifyPropertyChangedBase.PropertyChanged"/> event.
            <para>
            All properties subscribed to this property via the <see cref="T:Capoala.MVVM.SubscribeToChanges"/> 
            attribute are raised.
            All properties defined in the <see cref="T:Capoala.MVVM.NotifyOnChange"/> attribute associated
            to this property are notified.
            </para>
            </summary>
            <param name="propertyName">The name of the property whose value has changed.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Capoala.MVVM.NotifyPropertyChangedBase.SetAndNotify``1(``0@,``0,System.Collections.Generic.EqualityComparer{``0},System.String)" -->
        <member name="T:Capoala.MVVM.NotifyPropertyChangedBaseAutoBackingStore">
            <summary>
            A base class for implementing the <see cref="!:INotifyPropertyChanged"/> interface.
            </summary>
        </member>
        <member name="F:Capoala.MVVM.NotifyPropertyChangedBaseAutoBackingStore.BackingStore">
            <summary>
            The container for storing the values for property names.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.NotifyPropertyChangedBaseAutoBackingStore.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Capoala.MVVM.NotifyPropertyChangedBaseAutoBackingStore"/>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Capoala.MVVM.NotifyPropertyChangedBaseAutoBackingStore.Set``1(``0,System.Collections.Generic.EqualityComparer{``0},System.String)" -->
        <member name="M:Capoala.MVVM.NotifyPropertyChangedBaseAutoBackingStore.Get``1(System.String)">
            <summary>
            Returns the underlying value for the given property name.
            </summary>
            <param name="value">The value to set.</param>
            <param name="propertyName">The name of the property.</param>
            <returns>
            When this method returns, contains the value associated with the specified key,
            if the key is found; otherwise, the default value for the type of the value parameter.
            </returns>
        </member>
        <member name="T:Capoala.MVVM.NotifyPropertyChangedBaseSlim">
            <summary>
            A base class for implementing the <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> interface.
            </summary>
        </member>
        <member name="E:Capoala.MVVM.NotifyPropertyChangedBaseSlim.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.NotifyPropertyChangedBaseSlim.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Capoala.MVVM.NotifyPropertyChangedBaseSlim"/>.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.NotifyPropertyChangedBaseSlim.Notify(System.String)">
            <summary>
            Raises the <see cref="E:Capoala.MVVM.NotifyPropertyChangedBaseSlim.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">The name of the property whose value has changed.</param>
        </member>
        <member name="M:Capoala.MVVM.NotifyPropertyChangedBaseSlim.SetAndNotify``1(``0@,``0,System.Collections.Generic.EqualityComparer{``0},System.String)">
            <summary>
            Sets the referenced field to the value provided and raises the <see cref="E:Capoala.MVVM.NotifyPropertyChangedBaseSlim.PropertyChanged"/> event for the given property name.
            </summary>
            <typeparam name="T">The type of value being set.</typeparam>
            <param name="backingField">The reference to the field being set.</param>
            <param name="value">The value to set.</param>
            <param name="equalityComparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> implementation to use.</param>
            <param name="propertyName">The name of the property.</param>
            <returns>
            Returns <see langword="true"/>if the value was set; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="T:Capoala.MVVM.SubscribeToChanges">
            <summary>
            An attribute for subscribing to the change events of other properties.
            </summary>
        </member>
        <member name="P:Capoala.MVVM.SubscribeToChanges.PropertyNames">
            <summary>
            The property names to subscribe to.
            </summary>
        </member>
        <member name="M:Capoala.MVVM.SubscribeToChanges.#ctor(System.String[])">
            <summary>
            Creates a new instance of <see cref="T:Capoala.MVVM.SubscribeToChanges"/>.
            </summary>
            <param name="propertyNames">The property names to subscribe to.</param>
        </member>
    </members>
</doc>
